openapi: 3.0.3
info:
  title: Garden DX API
  description: |
    造園業向け統合業務管理システム Garden DX の API ドキュメント
    
    ## 概要
    Garden DX は造園事業者向けの包括的な業務管理システムです。見積作成から請求書発行まで、
    造園業界特有の業務フローをデジタル化し、効率的な経営をサポートします。
    
    ## 主要機能
    - 見積エンジン（階層構造、PDF出力）
    - 価格マスタ管理（カテゴリ別価格管理）
    - 請求書システム（見積連携、PDF生成）
    - 顧客管理
    - プロジェクト管理
    - RBAC認証（経営者/従業員の権限分離）
    
    ## 認証・認可
    - JWT Bearer トークン認証
    - ロールベースアクセス制御（RBAC）
    - マルチテナント（会社単位でのデータ分離）
    
    ## 利用者ロール
    - **経営者（owner）**: 全機能へのフルアクセス、原価・利益情報の閲覧、請求書発行権限
    - **従業員（employee）**: 見積作成（原価非表示）、プロジェクト管理、請求書作成不可
    
    ## サポート情報
    - 開発者: Garden DX Team
    - サポート: support@garden-dx.com
    - GitHub: https://github.com/garden-dx/api
    
  version: 1.0.0
  contact:
    name: Garden DX サポート
    email: support@garden-dx.com
    url: https://garden-dx.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: 開発環境
  - url: https://api.garden-dx.com
    description: 本番環境

paths:
  # ========================================
  # Health & System Endpoints
  # ========================================
  /:
    get:
      summary: ルートエンドポイント
      description: API のウェルカムメッセージを返します
      tags:
        - System
      responses:
        '200':
          description: ウェルカムメッセージ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to Garden DX API"
  
  /health:
    get:
      summary: ヘルスチェック
      description: API の稼働状況を確認します
      tags:
        - System
      responses:
        '200':
          description: API が正常に動作しています
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

  # ========================================
  # Authentication & User Management
  # ========================================
  /api/auth/user-features:
    get:
      summary: ユーザー機能一覧取得
      description: 現在のユーザーがアクセス可能な機能一覧を取得します
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: ユーザー機能一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        feature:
                          type: string
                          example: "estimates"
                        permissions:
                          type: array
                          items:
                            type: string
                            example: "create"
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/auth/check-permission/{resource}/{action}:
    get:
      summary: 権限チェック
      description: 特定のリソースに対する操作権限を確認します
      tags:
        - Authentication
      security:
        - BearerAuth: []
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum: [estimates, invoices, price-master, users, settings]
          description: チェック対象のリソース
        - name: action
          in: path
          required: true
          schema:
            type: string
            enum: [create, read, update, delete, export, import]
          description: チェック対象の操作
      responses:
        '200':
          description: 権限チェック結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowed:
                    type: boolean
                    example: true
                  reason:
                    type: string
                    example: "User has required permissions"
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/auth/permission-matrix:
    get:
      summary: 権限マトリックス取得
      description: 全ての権限マトリックスを取得します（経営者のみ）
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 権限マトリックス
          content:
            application/json:
              schema:
                type: object
                properties:
                  matrix:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  # ========================================
  # Estimate Management
  # ========================================
  /api/estimates:
    get:
      summary: 見積一覧取得
      description: 見積一覧を取得します。フィルタリングとページネーションに対応しています
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, submitted, approved, rejected, expired]
          description: ステータスでフィルタリング
        - name: customer_id
          in: query
          schema:
            type: integer
          description: 顧客IDでフィルタリング
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
          description: スキップする件数（ページネーション）
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 100
          description: 取得する件数（ページネーション）
      responses:
        '200':
          description: 見積一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimates:
                    type: array
                    items:
                      $ref: '#/components/schemas/Estimate'
                  total:
                    type: integer
                    example: 150
                  page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 50
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    
    post:
      summary: 見積作成
      description: 新しい見積を作成します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimateRequest'
      responses:
        '201':
          description: 見積作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/estimates/{estimate_id}:
    get:
      summary: 見積詳細取得
      description: 指定された見積の詳細情報を取得します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      responses:
        '200':
          description: 見積詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateDetail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    put:
      summary: 見積更新
      description: 見積情報を更新します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEstimateRequest'
      responses:
        '200':
          description: 見積更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/items:
    get:
      summary: 見積項目一覧取得
      description: 見積に含まれる項目一覧を取得します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      responses:
        '200':
          description: 見積項目一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstimateItem'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    post:
      summary: 見積項目追加
      description: 見積に新しい項目を追加します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimateItemRequest'
      responses:
        '201':
          description: 見積項目追加成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateItem'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/items/{item_id}:
    put:
      summary: 見積項目更新
      description: 見積項目を更新します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積項目ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEstimateItemRequest'
      responses:
        '200':
          description: 見積項目更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateItem'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    delete:
      summary: 見積項目削除
      description: 見積項目を削除します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積項目ID
      responses:
        '204':
          description: 見積項目削除成功
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/items/bulk:
    post:
      summary: 見積項目一括操作
      description: 複数の見積項目に対して一括操作を実行します（並び替え、一括削除など）
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  enum: [reorder, delete]
                  description: 実行する操作
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 項目ID
                      order:
                        type: integer
                        description: 並び順（reorder時のみ）
      responses:
        '200':
          description: 一括操作成功
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/profitability:
    get:
      summary: 収益性分析取得
      description: 見積の収益性分析データを取得します（経営者のみ）
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      responses:
        '200':
          description: 収益性分析データ
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_cost:
                    type: number
                    format: float
                    description: 総原価
                    example: 500000.0
                  total_price:
                    type: number
                    format: float
                    description: 総売上
                    example: 650000.0
                  profit_amount:
                    type: number
                    format: float
                    description: 利益額
                    example: 150000.0
                  profit_rate:
                    type: number
                    format: float
                    description: 利益率（%）
                    example: 23.08
                  margin_rate:
                    type: number
                    format: float
                    description: 粗利率（%）
                    example: 30.0
                  breakeven_point:
                    type: number
                    format: float
                    description: 損益分岐点
                    example: 500000.0
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/pdf:
    get:
      summary: 見積PDF生成
      description: 見積書のPDFを生成・ダウンロードします
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
        - name: format
          in: query
          schema:
            type: string
            enum: [download, preview]
            default: download
          description: PDF出力形式
        - name: include_cost
          in: query
          schema:
            type: boolean
            default: false
          description: 原価情報を含める（経営者のみ）
      responses:
        '200':
          description: PDF生成成功
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/preview:
    get:
      summary: 見積プレビューデータ取得
      description: 見積のプレビュー表示用データを取得します
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      responses:
        '200':
          description: プレビューデータ
          content:
            application/json:
              schema:
                type: object
                properties:
                  preview_data:
                    type: object
                    description: プレビュー用に整形されたデータ
                  layout_info:
                    type: object
                    description: レイアウト情報
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/estimates/{estimate_id}/create-invoice:
    post:
      summary: 見積から請求書作成
      description: 見積を基に請求書を作成します（経営者のみ）
      tags:
        - Estimates
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_date:
                  type: string
                  format: date
                  description: 請求日
                due_date:
                  type: string
                  format: date
                  description: 支払期限
                notes:
                  type: string
                  description: 備考
      responses:
        '201':
          description: 請求書作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  # ========================================
  # Price Master Management
  # ========================================
  /api/price-master:
    get:
      summary: 価格マスタ一覧取得
      description: 価格マスタ一覧を取得します。検索・フィルタリング・ページネーションに対応しています
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: カテゴリでフィルタリング
        - name: sub_category
          in: query
          schema:
            type: string
          description: サブカテゴリでフィルタリング
        - name: search
          in: query
          schema:
            type: string
          description: 検索キーワード
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
          description: スキップする件数
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 1000
          description: 取得する件数
      responses:
        '200':
          description: 価格マスタ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceMasterItem'
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    
    post:
      summary: 価格マスタ項目作成
      description: 新しい価格マスタ項目を作成します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePriceMasterItemRequest'
      responses:
        '201':
          description: 価格マスタ項目作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceMasterItem'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/categories:
    get:
      summary: カテゴリツリー取得
      description: 価格マスタのカテゴリツリーを取得します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      responses:
        '200':
          description: カテゴリツリー
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTree'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    
    post:
      summary: カテゴリ作成
      description: 新しいカテゴリを作成します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: カテゴリ名
                parent_id:
                  type: integer
                  nullable: true
                  description: 親カテゴリID（ルートカテゴリの場合はnull）
                order:
                  type: integer
                  description: 表示順序
      responses:
        '201':
          description: カテゴリ作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/items:
    get:
      summary: 価格マスタ項目詳細検索
      description: 高度な検索条件で価格マスタ項目を検索します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: category_ids
          in: query
          schema:
            type: array
            items:
              type: integer
          description: カテゴリID配列
        - name: price_min
          in: query
          schema:
            type: number
          description: 最小価格
        - name: price_max
          in: query
          schema:
            type: number
          description: 最大価格
        - name: unit
          in: query
          schema:
            type: string
          description: 単位
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
          description: 有効な項目のみ
      responses:
        '200':
          description: 検索結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceMasterItem'
                  filters:
                    type: object
                    description: 適用されたフィルタ条件
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/items/{item_id}:
    get:
      summary: 価格マスタ項目詳細取得
      description: 指定された価格マスタ項目の詳細を取得します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
          description: 価格マスタ項目ID
      responses:
        '200':
          description: 価格マスタ項目詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceMasterItemDetail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    put:
      summary: 価格マスタ項目更新
      description: 価格マスタ項目を更新します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
          description: 価格マスタ項目ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePriceMasterItemRequest'
      responses:
        '200':
          description: 価格マスタ項目更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceMasterItem'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/price-master/calculate-price:
    post:
      summary: 価格計算
      description: 指定された条件に基づいて価格を計算します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      item_id:
                        type: integer
                        description: 価格マスタ項目ID
                      quantity:
                        type: number
                        description: 数量
                      unit_price_override:
                        type: number
                        nullable: true
                        description: 単価の上書き値
                markup_rate:
                  type: number
                  description: マークアップ率（%）
                  default: 0
                discount_rate:
                  type: number
                  description: 割引率（%）
                  default: 0
      responses:
        '200':
          description: 価格計算結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  subtotal:
                    type: number
                    description: 小計
                  tax_amount:
                    type: number
                    description: 税額
                  total_amount:
                    type: number
                    description: 合計
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        item_id:
                          type: integer
                        unit_price:
                          type: number
                        quantity:
                          type: number
                        amount:
                          type: number
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/bulk-update:
    post:
      summary: 価格マスタ一括更新
      description: 複数の価格マスタ項目を一括で更新します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                update_type:
                  type: string
                  enum: [price_adjustment, category_change, status_change]
                  description: 更新タイプ
                filters:
                  type: object
                  description: 更新対象のフィルタ条件
                updates:
                  type: object
                  description: 更新内容
      responses:
        '200':
          description: 一括更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_count:
                    type: integer
                    description: 更新件数
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        item_id:
                          type: integer
                        error:
                          type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/export:
    get:
      summary: 価格マスタエクスポート
      description: 価格マスタをExcelまたはCSV形式でエクスポートします
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [excel, csv]
            default: excel
          description: エクスポート形式
        - name: category_ids
          in: query
          schema:
            type: array
            items:
              type: integer
          description: エクスポート対象のカテゴリID
        - name: include_inactive
          in: query
          schema:
            type: boolean
            default: false
          description: 無効な項目も含める
      responses:
        '200':
          description: エクスポート成功
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/import:
    post:
      summary: 価格マスタインポート
      description: ExcelまたはCSVファイルから価格マスタを一括インポートします
      tags:
        - Price Master
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: インポートファイル
                import_mode:
                  type: string
                  enum: [insert, update, upsert]
                  default: upsert
                  description: インポートモード
                dry_run:
                  type: boolean
                  default: false
                  description: 実行前確認（実際にはインポートしない）
      responses:
        '200':
          description: インポート成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  imported_count:
                    type: integer
                    description: インポート件数
                  updated_count:
                    type: integer
                    description: 更新件数
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        row:
                          type: integer
                        error:
                          type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/analytics/category-summary:
    get:
      summary: カテゴリ統計取得
      description: カテゴリ別の統計情報を取得します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      responses:
        '200':
          description: カテゴリ統計
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    category_id:
                      type: integer
                    category_name:
                      type: string
                    item_count:
                      type: integer
                    avg_price:
                      type: number
                    min_price:
                      type: number
                    max_price:
                      type: number
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/analytics/price-trends:
    get:
      summary: 価格トレンド分析
      description: 価格の推移や傾向を分析します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [monthly, quarterly, yearly]
            default: monthly
          description: 分析期間
        - name: category_id
          in: query
          schema:
            type: integer
          description: 分析対象カテゴリID
      responses:
        '200':
          description: 価格トレンド分析結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  trend_data:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                        avg_price:
                          type: number
                        change_rate:
                          type: number
                  analysis:
                    type: object
                    properties:
                      overall_trend:
                        type: string
                        enum: [increasing, decreasing, stable]
                      volatility:
                        type: number
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/price-master/items/{item_id}/history:
    get:
      summary: 価格履歴取得
      description: 指定された項目の価格変更履歴を取得します
      tags:
        - Price Master
      security:
        - BearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
          description: 価格マスタ項目ID
      responses:
        '200':
          description: 価格履歴
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    change_date:
                      type: string
                      format: date-time
                    old_price:
                      type: number
                    new_price:
                      type: number
                    change_reason:
                      type: string
                    changed_by:
                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  # ========================================
  # Invoice Management
  # ========================================
  /api/invoices/:
    get:
      summary: 請求書一覧取得
      description: 請求書一覧を取得します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: customer_id
          in: query
          schema:
            type: integer
          description: 顧客IDでフィルタリング
        - name: project_id
          in: query
          schema:
            type: integer
          description: プロジェクトIDでフィルタリング
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, sent, paid, overdue, cancelled]
          description: ステータスでフィルタリング
        - name: payment_status
          in: query
          schema:
            type: string
            enum: [pending, partial, paid, overdue]
          description: 支払いステータスでフィルタリング
        - name: invoice_date_from
          in: query
          schema:
            type: string
            format: date
          description: 請求日開始日
        - name: invoice_date_to
          in: query
          schema:
            type: string
            format: date
          description: 請求日終了日
        - name: due_date_from
          in: query
          schema:
            type: string
            format: date
          description: 支払期限開始日
        - name: due_date_to
          in: query
          schema:
            type: string
            format: date
          description: 支払期限終了日
        - name: search_term
          in: query
          schema:
            type: string
          description: 検索キーワード
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: ページ番号
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
          description: 1ページあたりの件数
      responses:
        '200':
          description: 請求書一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  summary:
                    type: object
                    properties:
                      total_amount:
                        type: number
                        description: 合計請求額
                      paid_amount:
                        type: number
                        description: 入金済額
                      outstanding_amount:
                        type: number
                        description: 未払額
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    
    post:
      summary: 請求書作成
      description: 新しい請求書を作成します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequest'
      responses:
        '201':
          description: 請求書作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/invoices/{invoice_id}:
    get:
      summary: 請求書詳細取得
      description: 指定された請求書の詳細を取得します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      responses:
        '200':
          description: 請求書詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    put:
      summary: 請求書更新
      description: 請求書を更新します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceRequest'
      responses:
        '200':
          description: 請求書更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    
    delete:
      summary: 請求書削除
      description: 請求書を削除します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      responses:
        '204':
          description: 請求書削除成功
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/{invoice_id}/status:
    patch:
      summary: 請求書ステータス更新
      description: 請求書のステータスを更新します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [draft, sent, paid, overdue, cancelled]
                  description: 新しいステータス
                note:
                  type: string
                  description: 変更理由・備考
      responses:
        '200':
          description: ステータス更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/from-estimate/{estimate_id}:
    post:
      summary: 見積から請求書作成
      description: 見積を基に請求書を作成します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_date:
                  type: string
                  format: date
                  description: 請求日
                due_date:
                  type: string
                  format: date
                  description: 支払期限
                notes:
                  type: string
                  description: 備考
                partial_items:
                  type: array
                  items:
                    type: object
                    properties:
                      estimate_item_id:
                        type: integer
                      quantity:
                        type: number
                        description: 請求数量（見積数量の一部も可）
                  description: 部分請求の場合の対象項目
      responses:
        '201':
          description: 請求書作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/{invoice_id}/send:
    post:
      summary: 請求書送信
      description: 請求書をメールで送信します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to_email:
                  type: string
                  format: email
                  description: 送信先メールアドレス
                cc_emails:
                  type: array
                  items:
                    type: string
                    format: email
                  description: CCメールアドレス
                subject:
                  type: string
                  description: メール件名
                message:
                  type: string
                  description: メール本文
                include_pdf:
                  type: boolean
                  default: true
                  description: PDFを添付する
      responses:
        '200':
          description: 請求書送信成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "請求書が正常に送信されました"
                  sent_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/{invoice_id}/payments:
    post:
      summary: 入金記録登録
      description: 請求書に対する入金を記録します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_date:
                  type: string
                  format: date
                  description: 入金日
                amount:
                  type: number
                  description: 入金額
                payment_method:
                  type: string
                  enum: [bank_transfer, cash, check, credit_card, other]
                  description: 支払方法
                notes:
                  type: string
                  description: 備考
                reference_number:
                  type: string
                  description: 参照番号（振込番号など）
      responses:
        '201':
          description: 入金記録登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_id:
                    type: integer
                  invoice_id:
                    type: integer
                  payment_date:
                    type: string
                    format: date
                  amount:
                    type: number
                  payment_method:
                    type: string
                  remaining_amount:
                    type: number
                    description: 残債
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/overdue/list:
    get:
      summary: 延滞請求書一覧取得
      description: 支払期限を過ぎた請求書の一覧を取得します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: overdue_days
          in: query
          schema:
            type: integer
            default: 0
          description: 延滞日数（指定日数以上延滞している請求書）
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [due_date, amount, customer_name]
            default: due_date
          description: ソート基準
      responses:
        '200':
          description: 延滞請求書一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  overdue_invoices:
                    type: array
                    items:
                      type: object
                      properties:
                        invoice_id:
                          type: integer
                        invoice_number:
                          type: string
                        customer_name:
                          type: string
                        total_amount:
                          type: number
                        due_date:
                          type: string
                          format: date
                        overdue_days:
                          type: integer
                        outstanding_amount:
                          type: number
                  summary:
                    type: object
                    properties:
                      total_overdue_amount:
                        type: number
                      total_overdue_count:
                        type: integer
                      avg_overdue_days:
                        type: number
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/invoices/summary/payment:
    get:
      summary: 支払状況サマリー取得
      description: 請求書の支払状況サマリーを取得します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [current_month, last_month, current_quarter, last_quarter, current_year]
            default: current_month
          description: 集計期間
      responses:
        '200':
          description: 支払状況サマリー
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: string
                    description: 集計期間
                  total_invoiced:
                    type: number
                    description: 総請求額
                  total_paid:
                    type: number
                    description: 総入金額
                  total_outstanding:
                    type: number
                    description: 総未払額
                  payment_rate:
                    type: number
                    description: 入金率（%）
                  avg_payment_days:
                    type: number
                    description: 平均入金日数
                  overdue_count:
                    type: integer
                    description: 延滞件数
                  overdue_amount:
                    type: number
                    description: 延滞額
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/invoices/batch/update-overdue:
    post:
      summary: 延滞ステータス一括更新
      description: 支払期限を過ぎた請求書の延滞ステータスを一括更新します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dry_run:
                  type: boolean
                  default: false
                  description: 実行前確認（実際には更新しない）
                notification:
                  type: boolean
                  default: true
                  description: 顧客への通知を送信する
      responses:
        '200':
          description: 一括更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_count:
                    type: integer
                    description: 更新件数
                  notification_sent:
                    type: integer
                    description: 通知送信件数
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        invoice_id:
                          type: integer
                        error:
                          type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/invoices/{invoice_id}/pdf:
    get:
      summary: 請求書PDF生成
      description: 請求書のPDFを生成・ダウンロードします（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
        - name: format
          in: query
          schema:
            type: string
            enum: [download, preview]
            default: download
          description: PDF出力形式
      responses:
        '200':
          description: PDF生成成功
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/{invoice_id}/attachments/upload:
    post:
      summary: 請求書添付ファイルアップロード
      description: 請求書に添付ファイルをアップロードします（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 添付ファイル
                description:
                  type: string
                  description: ファイル説明
      responses:
        '201':
          description: ファイルアップロード成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_id:
                    type: integer
                  filename:
                    type: string
                  file_size:
                    type: integer
                  upload_date:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/invoices/{invoice_id}/history:
    get:
      summary: 請求書履歴取得
      description: 請求書の変更履歴を取得します（経営者のみ）
      tags:
        - Invoices
      security:
        - BearerAuth: []
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
          description: 請求書ID
      responses:
        '200':
          description: 請求書履歴
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    change_date:
                      type: string
                      format: date-time
                    change_type:
                      type: string
                      enum: [created, updated, status_changed, payment_recorded, sent]
                    description:
                      type: string
                    changed_by:
                      type: string
                    old_values:
                      type: object
                    new_values:
                      type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  # ========================================
  # Settings & Configuration
  # ========================================
  /api/settings/company:
    get:
      summary: 会社情報取得
      description: 会社情報を取得します
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 会社情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    
    put:
      summary: 会社情報更新
      description: 会社情報を更新します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyInfoRequest'
      responses:
        '200':
          description: 会社情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfo'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/users:
    get:
      summary: ユーザー一覧取得
      description: ユーザー一覧を取得します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: ユーザー一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    
    post:
      summary: ユーザー作成
      description: 新しいユーザーを作成します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: ユーザー作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/users/{user_id}:
    put:
      summary: ユーザー更新
      description: ユーザー情報を更新します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ユーザーID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: ユーザー更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /api/settings/users/invite:
    post:
      summary: ユーザー招待
      description: 新しいユーザーに招待メールを送信します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: 招待するメールアドレス
                role:
                  type: string
                  enum: [owner, employee]
                  description: ロール
                message:
                  type: string
                  description: 招待メッセージ
      responses:
        '200':
          description: 招待メール送信成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "招待メールを送信しました"
                  expires_at:
                    type: string
                    format: date-time
                    description: 招待の有効期限
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/security:
    get:
      summary: セキュリティ設定取得
      description: セキュリティ設定を取得します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: セキュリティ設定
          content:
            application/json:
              schema:
                type: object
                properties:
                  password_policy:
                    type: object
                    properties:
                      min_length:
                        type: integer
                      require_uppercase:
                        type: boolean
                      require_lowercase:
                        type: boolean
                      require_numbers:
                        type: boolean
                      require_symbols:
                        type: boolean
                  session_timeout:
                    type: integer
                    description: セッションタイムアウト（分）
                  max_login_attempts:
                    type: integer
                    description: 最大ログイン試行回数
                  lockout_duration:
                    type: integer
                    description: ロックアウト期間（分）
                  two_factor_auth:
                    type: boolean
                    description: 二要素認証の有効/無効
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    
    put:
      summary: セキュリティ設定更新
      description: セキュリティ設定を更新します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password_policy:
                  type: object
                  properties:
                    min_length:
                      type: integer
                      minimum: 8
                    require_uppercase:
                      type: boolean
                    require_lowercase:
                      type: boolean
                    require_numbers:
                      type: boolean
                    require_symbols:
                      type: boolean
                session_timeout:
                  type: integer
                  minimum: 30
                  maximum: 480
                max_login_attempts:
                  type: integer
                  minimum: 3
                  maximum: 10
                lockout_duration:
                  type: integer
                  minimum: 5
                  maximum: 60
                two_factor_auth:
                  type: boolean
      responses:
        '200':
          description: セキュリティ設定更新成功
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/security/test:
    post:
      summary: セキュリティテスト実行
      description: セキュリティ設定のテストを実行します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                test_type:
                  type: string
                  enum: [password_policy, session_timeout, brute_force_protection]
                  description: テストタイプ
      responses:
        '200':
          description: セキュリティテスト結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_type:
                    type: string
                  result:
                    type: string
                    enum: [passed, failed, warning]
                  details:
                    type: string
                  recommendations:
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/system:
    get:
      summary: システム設定取得
      description: システム設定を取得します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: システム設定
          content:
            application/json:
              schema:
                type: object
                properties:
                  timezone:
                    type: string
                    description: タイムゾーン
                  currency:
                    type: string
                    description: 通貨コード
                  date_format:
                    type: string
                    description: 日付形式
                  number_format:
                    type: string
                    description: 数値形式
                  default_tax_rate:
                    type: number
                    description: デフォルト税率
                  auto_backup:
                    type: boolean
                    description: 自動バックアップの有効/無効
                  backup_retention_days:
                    type: integer
                    description: バックアップ保持日数
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    
    put:
      summary: システム設定更新
      description: システム設定を更新します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timezone:
                  type: string
                  example: "Asia/Tokyo"
                currency:
                  type: string
                  example: "JPY"
                date_format:
                  type: string
                  example: "YYYY-MM-DD"
                number_format:
                  type: string
                  example: "1,000.00"
                default_tax_rate:
                  type: number
                  example: 0.1
                auto_backup:
                  type: boolean
                backup_retention_days:
                  type: integer
                  minimum: 7
                  maximum: 365
      responses:
        '200':
          description: システム設定更新成功
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/system/status:
    get:
      summary: システムステータス取得
      description: システムの動作状況を取得します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: システムステータス
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, warning, error]
                  uptime:
                    type: string
                    description: 稼働時間
                  database_status:
                    type: string
                    enum: [connected, disconnected, slow]
                  memory_usage:
                    type: object
                    properties:
                      used:
                        type: string
                      total:
                        type: string
                      percentage:
                        type: number
                  disk_usage:
                    type: object
                    properties:
                      used:
                        type: string
                      total:
                        type: string
                      percentage:
                        type: number
                  last_backup:
                    type: string
                    format: date-time
                  active_users:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/templates:
    get:
      summary: テンプレート一覧取得
      description: 見積書・請求書のテンプレート一覧を取得します
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: テンプレート一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                      enum: [estimate, invoice]
                    is_default:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    
    post:
      summary: テンプレート作成
      description: 新しいテンプレートを作成します
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: テンプレート名
                type:
                  type: string
                  enum: [estimate, invoice]
                  description: テンプレートタイプ
                template_data:
                  type: object
                  description: テンプレートデータ
                is_default:
                  type: boolean
                  description: デフォルトテンプレートとして設定
      responses:
        '201':
          description: テンプレート作成成功
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/settings/notifications:
    get:
      summary: 通知設定取得
      description: 通知設定を取得します
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 通知設定
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_notifications:
                    type: object
                    properties:
                      new_estimate:
                        type: boolean
                      invoice_sent:
                        type: boolean
                      payment_received:
                        type: boolean
                      invoice_overdue:
                        type: boolean
                  system_notifications:
                    type: object
                    properties:
                      maintenance_mode:
                        type: boolean
                      backup_completed:
                        type: boolean
                      security_alerts:
                        type: boolean
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/settings/notifications/test:
    post:
      summary: テスト通知送信
      description: 通知設定のテストを実行します
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_type:
                  type: string
                  enum: [email, system]
                  description: 通知タイプ
                test_email:
                  type: string
                  format: email
                  description: テスト送信先メールアドレス
      responses:
        '200':
          description: テスト通知送信成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "テスト通知を送信しました"
                  sent_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/settings/backup:
    post:
      summary: 手動バックアップ実行
      description: 手動でバックアップを実行します（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                backup_type:
                  type: string
                  enum: [full, incremental]
                  default: full
                  description: バックアップタイプ
                description:
                  type: string
                  description: バックアップの説明
      responses:
        '200':
          description: バックアップ実行成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  backup_id:
                    type: string
                    description: バックアップID
                  started_at:
                    type: string
                    format: date-time
                  estimated_completion:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/settings/maintenance:
    post:
      summary: メンテナンスモード切り替え
      description: メンテナンスモードの有効/無効を切り替えます（経営者のみ）
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: メンテナンスモードの有効/無効
                message:
                  type: string
                  description: メンテナンスメッセージ
                scheduled_end:
                  type: string
                  format: date-time
                  description: 予定終了時刻
      responses:
        '200':
          description: メンテナンスモード切り替え成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_mode:
                    type: boolean
                  message:
                    type: string
                  scheduled_end:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  # ========================================
  # Demo Endpoints (Development Only)
  # ========================================
  /api/demo/estimates:
    get:
      summary: デモ見積データ取得
      description: デモ用の見積データを取得します（認証不要）
      tags:
        - Demo
      responses:
        '200':
          description: デモ見積データ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estimate'

  /api/demo/price-master:
    get:
      summary: デモ価格マスタデータ取得
      description: デモ用の価格マスタデータを取得します（認証不要）
      tags:
        - Demo
      responses:
        '200':
          description: デモ価格マスタデータ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceMasterItem'

  /api/demo/estimates/{estimate_id}/pdf:
    post:
      summary: デモPDF生成
      description: デモ用のPDF生成を実行します（認証不要）
      tags:
        - Demo
      parameters:
        - name: estimate_id
          in: path
          required: true
          schema:
            type: integer
          description: 見積ID
      responses:
        '200':
          description: デモPDF生成成功
          content:
            application/pdf:
              schema:
                type: string
                format: binary

# ========================================
# Components
# ========================================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer トークンを使用した認証

  responses:
    UnauthorizedError:
      description: 認証が必要です
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "認証が必要です"
              code:
                type: string
                example: "UNAUTHORIZED"
    
    ForbiddenError:
      description: 権限がありません
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "この操作を実行する権限がありません"
              code:
                type: string
                example: "FORBIDDEN"
    
    NotFoundError:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "指定されたリソースが見つかりません"
              code:
                type: string
                example: "NOT_FOUND"
    
    BadRequestError:
      description: リクエストが無効です
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "リクエストが無効です"
              code:
                type: string
                example: "BAD_REQUEST"
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: string

  schemas:
    # ========================================
    # Core Business Entities
    # ========================================
    Estimate:
      type: object
      properties:
        id:
          type: integer
          description: 見積ID
        estimate_number:
          type: string
          description: 見積番号
        customer_id:
          type: integer
          description: 顧客ID
        customer_name:
          type: string
          description: 顧客名
        project_name:
          type: string
          description: プロジェクト名
        site_address:
          type: string
          description: 現場住所
        status:
          type: string
          enum: [draft, submitted, approved, rejected, expired]
          description: ステータス
        issue_date:
          type: string
          format: date
          description: 発行日
        expiry_date:
          type: string
          format: date
          description: 有効期限
        subtotal:
          type: number
          description: 小計
        tax_amount:
          type: number
          description: 税額
        total_amount:
          type: number
          description: 合計金額
        notes:
          type: string
          description: 備考
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    EstimateDetail:
      allOf:
        - $ref: '#/components/schemas/Estimate'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/EstimateItem'
              description: 見積項目一覧
            customer:
              $ref: '#/components/schemas/Customer'
            profitability:
              type: object
              properties:
                total_cost:
                  type: number
                  description: 総原価（経営者のみ）
                profit_amount:
                  type: number
                  description: 利益額（経営者のみ）
                profit_rate:
                  type: number
                  description: 利益率（経営者のみ）

    EstimateItem:
      type: object
      properties:
        id:
          type: integer
          description: 見積項目ID
        estimate_id:
          type: integer
          description: 見積ID
        parent_id:
          type: integer
          nullable: true
          description: 親項目ID（階層構造）
        category:
          type: string
          description: カテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        quantity:
          type: number
          description: 数量
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価（従業員には原価非表示）
        amount:
          type: number
          description: 金額
        cost_price:
          type: number
          description: 原価（経営者のみ）
        profit_margin:
          type: number
          description: 利益率（経営者のみ）
        order_index:
          type: integer
          description: 表示順序
        notes:
          type: string
          description: 備考
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    Invoice:
      type: object
      properties:
        id:
          type: integer
          description: 請求書ID
        invoice_number:
          type: string
          description: 請求書番号
        customer_id:
          type: integer
          description: 顧客ID
        customer_name:
          type: string
          description: 顧客名
        project_name:
          type: string
          description: プロジェクト名
        status:
          type: string
          enum: [draft, sent, paid, overdue, cancelled]
          description: ステータス
        payment_status:
          type: string
          enum: [pending, partial, paid, overdue]
          description: 支払いステータス
        issue_date:
          type: string
          format: date
          description: 発行日
        due_date:
          type: string
          format: date
          description: 支払期限
        subtotal:
          type: number
          description: 小計
        tax_amount:
          type: number
          description: 税額
        total_amount:
          type: number
          description: 合計金額
        paid_amount:
          type: number
          description: 入金済額
        outstanding_amount:
          type: number
          description: 未払額
        notes:
          type: string
          description: 備考
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    InvoiceDetail:
      allOf:
        - $ref: '#/components/schemas/Invoice'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItem'
              description: 請求書項目一覧
            customer:
              $ref: '#/components/schemas/Customer'
            payments:
              type: array
              items:
                $ref: '#/components/schemas/Payment'
              description: 入金履歴

    InvoiceItem:
      type: object
      properties:
        id:
          type: integer
          description: 請求書項目ID
        invoice_id:
          type: integer
          description: 請求書ID
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        quantity:
          type: number
          description: 数量
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        amount:
          type: number
          description: 金額
        order_index:
          type: integer
          description: 表示順序

    Payment:
      type: object
      properties:
        id:
          type: integer
          description: 入金ID
        invoice_id:
          type: integer
          description: 請求書ID
        payment_date:
          type: string
          format: date
          description: 入金日
        amount:
          type: number
          description: 入金額
        payment_method:
          type: string
          enum: [bank_transfer, cash, check, credit_card, other]
          description: 支払方法
        notes:
          type: string
          description: 備考
        reference_number:
          type: string
          description: 参照番号
        created_at:
          type: string
          format: date-time
          description: 作成日時

    PriceMasterItem:
      type: object
      properties:
        id:
          type: integer
          description: 価格マスタ項目ID
        category:
          type: string
          description: カテゴリ
        sub_category:
          type: string
          description: サブカテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        cost_price:
          type: number
          description: 原価（経営者のみ）
        supplier:
          type: string
          description: 仕入先
        is_active:
          type: boolean
          description: 有効フラグ
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    PriceMasterItemDetail:
      allOf:
        - $ref: '#/components/schemas/PriceMasterItem'
        - type: object
          properties:
            category_path:
              type: array
              items:
                type: string
              description: カテゴリパス
            price_history:
              type: array
              items:
                type: object
                properties:
                  change_date:
                    type: string
                    format: date-time
                  old_price:
                    type: number
                  new_price:
                    type: number
                  change_reason:
                    type: string
              description: 価格履歴

    Customer:
      type: object
      properties:
        id:
          type: integer
          description: 顧客ID
        name:
          type: string
          description: 顧客名
        contact_person:
          type: string
          description: 担当者名
        phone:
          type: string
          description: 電話番号
        email:
          type: string
          format: email
          description: メールアドレス
        address:
          type: string
          description: 住所
        created_at:
          type: string
          format: date-time
          description: 作成日時

    CompanyInfo:
      type: object
      properties:
        id:
          type: integer
          description: 会社ID
        name:
          type: string
          description: 会社名
        postal_code:
          type: string
          description: 郵便番号
        address:
          type: string
          description: 住所
        phone:
          type: string
          description: 電話番号
        fax:
          type: string
          description: FAX番号
        email:
          type: string
          format: email
          description: メールアドレス
        website:
          type: string
          description: ウェブサイト
        business_license:
          type: string
          description: 建設業許可番号
        representative:
          type: string
          description: 代表者名
        established_date:
          type: string
          format: date
          description: 設立日
        bank_info:
          type: object
          properties:
            bank_name:
              type: string
              description: 銀行名
            branch_name:
              type: string
              description: 支店名
            account_type:
              type: string
              description: 口座種別
            account_number:
              type: string
              description: 口座番号
            account_holder:
              type: string
              description: 口座名義
        logo_url:
          type: string
          description: ロゴ画像URL
        seal_url:
          type: string
          description: 印鑑画像URL

    User:
      type: object
      properties:
        id:
          type: integer
          description: ユーザーID
        email:
          type: string
          format: email
          description: メールアドレス
        name:
          type: string
          description: 名前
        role:
          type: string
          enum: [owner, employee]
          description: ロール
        is_active:
          type: boolean
          description: 有効フラグ
        last_login:
          type: string
          format: date-time
          description: 最終ログイン日時
        created_at:
          type: string
          format: date-time
          description: 作成日時

    Category:
      type: object
      properties:
        id:
          type: integer
          description: カテゴリID
        name:
          type: string
          description: カテゴリ名
        parent_id:
          type: integer
          nullable: true
          description: 親カテゴリID
        order:
          type: integer
          description: 表示順序
        is_active:
          type: boolean
          description: 有効フラグ

    CategoryTree:
      type: object
      properties:
        id:
          type: integer
          description: カテゴリID
        name:
          type: string
          description: カテゴリ名
        order:
          type: integer
          description: 表示順序
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryTree'
          description: 子カテゴリ

    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: 現在のページ
        per_page:
          type: integer
          description: 1ページあたりの件数
        total:
          type: integer
          description: 総件数
        total_pages:
          type: integer
          description: 総ページ数
        has_next:
          type: boolean
          description: 次のページが存在するか
        has_prev:
          type: boolean
          description: 前のページが存在するか

    # ========================================
    # Request Schemas
    # ========================================
    CreateEstimateRequest:
      type: object
      required:
        - customer_name
        - project_name
        - site_address
      properties:
        customer_name:
          type: string
          description: 顧客名
        customer_contact:
          type: string
          description: 担当者名
        customer_phone:
          type: string
          description: 電話番号
        customer_email:
          type: string
          format: email
          description: メールアドレス
        project_name:
          type: string
          description: プロジェクト名
        site_address:
          type: string
          description: 現場住所
        issue_date:
          type: string
          format: date
          description: 発行日
        expiry_date:
          type: string
          format: date
          description: 有効期限
        notes:
          type: string
          description: 備考
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateEstimateItemRequest'
          description: 見積項目

    UpdateEstimateRequest:
      type: object
      properties:
        customer_name:
          type: string
          description: 顧客名
        customer_contact:
          type: string
          description: 担当者名
        customer_phone:
          type: string
          description: 電話番号
        customer_email:
          type: string
          format: email
          description: メールアドレス
        project_name:
          type: string
          description: プロジェクト名
        site_address:
          type: string
          description: 現場住所
        status:
          type: string
          enum: [draft, submitted, approved, rejected, expired]
          description: ステータス
        issue_date:
          type: string
          format: date
          description: 発行日
        expiry_date:
          type: string
          format: date
          description: 有効期限
        notes:
          type: string
          description: 備考

    CreateEstimateItemRequest:
      type: object
      required:
        - item_name
        - quantity
        - unit
        - unit_price
      properties:
        parent_id:
          type: integer
          nullable: true
          description: 親項目ID（階層構造）
        category:
          type: string
          description: カテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        quantity:
          type: number
          description: 数量
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        cost_price:
          type: number
          description: 原価
        order_index:
          type: integer
          description: 表示順序
        notes:
          type: string
          description: 備考

    UpdateEstimateItemRequest:
      type: object
      properties:
        parent_id:
          type: integer
          nullable: true
          description: 親項目ID（階層構造）
        category:
          type: string
          description: カテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        quantity:
          type: number
          description: 数量
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        cost_price:
          type: number
          description: 原価
        order_index:
          type: integer
          description: 表示順序
        notes:
          type: string
          description: 備考

    CreatePriceMasterItemRequest:
      type: object
      required:
        - category
        - item_name
        - unit
        - unit_price
      properties:
        category:
          type: string
          description: カテゴリ
        sub_category:
          type: string
          description: サブカテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        cost_price:
          type: number
          description: 原価
        supplier:
          type: string
          description: 仕入先
        is_active:
          type: boolean
          default: true
          description: 有効フラグ

    UpdatePriceMasterItemRequest:
      type: object
      properties:
        category:
          type: string
          description: カテゴリ
        sub_category:
          type: string
          description: サブカテゴリ
        item_name:
          type: string
          description: 項目名
        description:
          type: string
          description: 説明
        unit:
          type: string
          description: 単位
        unit_price:
          type: number
          description: 単価
        cost_price:
          type: number
          description: 原価
        supplier:
          type: string
          description: 仕入先
        is_active:
          type: boolean
          description: 有効フラグ

    CreateInvoiceRequest:
      type: object
      required:
        - customer_name
        - project_name
        - issue_date
        - due_date
        - items
      properties:
        customer_name:
          type: string
          description: 顧客名
        customer_contact:
          type: string
          description: 担当者名
        customer_phone:
          type: string
          description: 電話番号
        customer_email:
          type: string
          format: email
          description: メールアドレス
        project_name:
          type: string
          description: プロジェクト名
        issue_date:
          type: string
          format: date
          description: 発行日
        due_date:
          type: string
          format: date
          description: 支払期限
        notes:
          type: string
          description: 備考
        items:
          type: array
          items:
            type: object
            properties:
              item_name:
                type: string
              description:
                type: string
              quantity:
                type: number
              unit:
                type: string
              unit_price:
                type: number
          description: 請求書項目

    UpdateInvoiceRequest:
      type: object
      properties:
        customer_name:
          type: string
          description: 顧客名
        customer_contact:
          type: string
          description: 担当者名
        customer_phone:
          type: string
          description: 電話番号
        customer_email:
          type: string
          format: email
          description: メールアドレス
        project_name:
          type: string
          description: プロジェクト名
        status:
          type: string
          enum: [draft, sent, paid, overdue, cancelled]
          description: ステータス
        issue_date:
          type: string
          format: date
          description: 発行日
        due_date:
          type: string
          format: date
          description: 支払期限
        notes:
          type: string
          description: 備考

    UpdateCompanyInfoRequest:
      type: object
      properties:
        name:
          type: string
          description: 会社名
        postal_code:
          type: string
          description: 郵便番号
        address:
          type: string
          description: 住所
        phone:
          type: string
          description: 電話番号
        fax:
          type: string
          description: FAX番号
        email:
          type: string
          format: email
          description: メールアドレス
        website:
          type: string
          description: ウェブサイト
        business_license:
          type: string
          description: 建設業許可番号
        representative:
          type: string
          description: 代表者名
        established_date:
          type: string
          format: date
          description: 設立日
        bank_info:
          type: object
          properties:
            bank_name:
              type: string
            branch_name:
              type: string
            account_type:
              type: string
            account_number:
              type: string
            account_holder:
              type: string

    CreateUserRequest:
      type: object
      required:
        - email
        - name
        - role
      properties:
        email:
          type: string
          format: email
          description: メールアドレス
        name:
          type: string
          description: 名前
        role:
          type: string
          enum: [owner, employee]
          description: ロール
        password:
          type: string
          description: パスワード
        is_active:
          type: boolean
          default: true
          description: 有効フラグ

    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: 名前
        role:
          type: string
          enum: [owner, employee]
          description: ロール
        is_active:
          type: boolean
          description: 有効フラグ

tags:
  - name: System
    description: システム関連エンドポイント
  - name: Authentication
    description: 認証・認可関連エンドポイント
  - name: Estimates
    description: 見積管理エンドポイント
  - name: Price Master
    description: 価格マスタ管理エンドポイント
  - name: Invoices
    description: 請求書管理エンドポイント（経営者のみ）
  - name: Settings
    description: 設定管理エンドポイント
  - name: Demo
    description: デモ用エンドポイント（開発環境のみ）